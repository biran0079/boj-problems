package boj.solution.coins;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.Timeout;

import static org.junit.Assert.assertEquals;

/**
 * Created by biran on 11/10/16.
 */
public class Coins2Test {

  @Rule
  public final Timeout globalTimeout = Timeout.seconds(1);

  @Test
  public void test() {
    assertEquals(5, new Coins2().solve(new int[] {1, 2, 10, 2, 1}));
    assertEquals(0, new Coins2().solve(new int[] {}));
    assertEquals(60, new Coins2().solve(new int[] {60}));
    assertEquals(48, new Coins2().solve(new int[] {48, 29}));
    assertEquals(68, new Coins2().solve(new int[] {47, 15, 53}));
    assertEquals(145, new Coins2().solve(new int[] {91, 61, 19, 54}));
    assertEquals(234, new Coins2().solve(new int[] {77, 77, 73, 62, 95}));
    assertEquals(168, new Coins2().solve(new int[] {44, 84, 75, 41, 20, 43}));
    assertEquals(167, new Coins2().solve(new int[] {88, 24, 47, 52, 60, 3, 82}));
    assertEquals(247, new Coins2().solve(new int[] {92, 23, 45, 45, 37, 87, 2, 62}));
    assertEquals(276, new Coins2().solve(new int[] {25, 53, 38, 35, 60, 75, 55, 30, 98}));
    assertEquals(312, new Coins2().solve(new int[] {91, 74, 36, 12, 62, 19, 77, 16, 46, 7}));
    assertEquals(168, new Coins2().solve(new int[] {16, 8, 37, 43, 47, 87, 88, 5, 58, 8, 17}));
    assertEquals(327, new Coins2().solve(new int[] {51, 18, 58, 18, 38, 72, 57, 51, 26, 80, 97, 62}));
    assertEquals(237, new Coins2().solve(new int[] {35, 20, 67, 73, 17, 69, 5, 52, 89, 43, 1, 41, 23}));
    assertEquals(342, new Coins2().solve(new int[] {80, 68, 14, 16, 23, 57, 22, 5, 71, 36, 65, 19, 53, 67}));
    assertEquals(422, new Coins2().solve(new int[] {67, 31, 97, 88, 63, 30, 25, 98, 21, 97, 57, 86, 41, 90, 51}));
    assertEquals(481, new Coins2().solve(new int[] {71, 34, 30, 65, 86, 4, 84, 62, 92, 50, 28, 53, 49, 45, 41, 10}));
    assertEquals(434, new Coins2().solve(new int[] {25, 62, 94, 59, 17, 11, 71, 23, 77, 78, 16, 71, 35, 41, 86, 93, 13}));
    assertEquals(554, new Coins2().solve(new int[] {57, 58, 78, 16, 58, 40, 75, 55, 45, 8, 29, 15, 75, 33, 90, 41, 6, 98}));
    assertEquals(504, new Coins2().solve(new int[] {32, 78, 41, 67, 29, 39, 91, 2, 81, 77, 81, 78, 1, 84, 63, 89, 12, 60, 73}));
    assertEquals(575, new Coins2().solve(new int[] {72, 15, 13, 91, 53, 2, 80, 34, 34, 78, 15, 82, 69, 48, 38, 90, 60, 16, 73, 62}));
    assertEquals(557, new Coins2().solve(new int[] {54, 94, 62, 28, 89, 22, 59, 74, 75, 90, 93, 60, 17, 50, 32, 72, 70, 43, 14, 2, 0}));
    assertEquals(687, new Coins2().solve(new int[] {26, 52, 45, 5, 13, 93, 48, 77, 20, 46, 2, 85, 26, 19, 43, 72, 57, 50, 35, 94, 16, 94}));
    assertEquals(657, new Coins2().solve(new int[] {48, 69, 88, 28, 35, 96, 26, 47, 24, 24, 89, 43, 53, 23, 92, 86, 74, 55, 44, 95, 46, 71, 57}));
    assertEquals(695, new Coins2().solve(new int[] {84, 37, 77, 34, 79, 82, 0, 58, 5, 52, 11, 80, 86, 38, 19, 51, 26, 92, 85, 64, 17, 16, 23, 62}));
    assertEquals(540, new Coins2().solve(new int[] {15, 62, 8, 41, 51, 36, 12, 3, 53, 18, 70, 88, 99, 18, 11, 60, 29, 57, 36, 15, 17, 75, 95, 36, 86}));
    assertEquals(708, new Coins2().solve(new int[] {24, 71, 35, 10, 51, 40, 74, 27, 20, 63, 27, 67, 26, 52, 84, 18, 79, 23, 68, 21, 41, 80, 86, 54, 93, 22}));
    assertEquals(785, new Coins2().solve(new int[] {56, 98, 67, 7, 34, 49, 62, 62, 77, 93, 38, 12, 59, 70, 76, 80, 93, 54, 69, 98, 97, 32, 76, 98, 49, 6, 26}));
    assertEquals(686, new Coins2().solve(new int[] {14, 16, 20, 23, 96, 28, 21, 55, 61, 62, 6, 98, 11, 15, 86, 62, 29, 87, 88, 11, 40, 0, 53, 22, 47, 89, 77, 55}));
    assertEquals(632, new Coins2().solve(new int[] {17, 77, 49, 28, 68, 99, 99, 40, 22, 71, 77, 61, 51, 31, 1, 83, 61, 77, 22, 41, 4, 58, 53, 89, 78, 56, 7, 75, 23}));
    assertEquals(729, new Coins2().solve(new int[] {35, 2, 6, 3, 70, 32, 81, 29, 10, 39, 66, 4, 65, 99, 74, 30, 17, 42, 13, 12, 22, 89, 79, 72, 46, 57, 60, 78, 84, 45}));
    assertEquals(527, new Coins2().solve(new int[] {29, 70, 17, 40, 81, 24, 96, 7, 7, 2, 33, 64, 57, 7, 25, 58, 86, 13, 20, 64, 1, 56, 67, 26, 30, 7, 1, 80, 75, 4, 29}));
    assertEquals(837, new Coins2().solve(new int[] {94, 72, 52, 55, 89, 19, 53, 20, 71, 75, 19, 80, 14, 64, 38, 96, 83, 37, 42, 56, 69, 10, 70, 7, 6, 25, 23, 77, 78, 39, 17, 51}));
    assertEquals(774, new Coins2().solve(new int[] {55, 39, 44, 43, 46, 8, 33, 54, 7, 45, 31, 87, 81, 11, 54, 81, 29, 90, 75, 10, 64, 36, 45, 4, 68, 40, 97, 72, 43, 54, 44, 45, 24}));
    assertEquals(820, new Coins2().solve(new int[] {64, 15, 38, 88, 45, 56, 94, 12, 22, 8, 59, 5, 51, 17, 37, 60, 67, 33, 0, 33, 16, 34, 83, 81, 10, 69, 53, 75, 56, 65, 68, 12, 30, 77}));
    assertEquals(910, new Coins2().solve(new int[] {93, 53, 69, 91, 15, 58, 64, 8, 78, 78, 71, 93, 56, 10, 27, 83, 56, 0, 46, 63, 75, 12, 36, 54, 36, 86, 51, 89, 83, 3, 20, 65, 59, 31, 17}));
    assertEquals(1057, new Coins2().solve(new int[] {36, 86, 68, 19, 96, 66, 8, 63, 37, 49, 13, 85, 79, 73, 33, 52, 82, 18, 22, 83, 6, 65, 20, 50, 35, 0, 82, 84, 69, 68, 52, 80, 73, 6, 42, 81}));
    assertEquals(955, new Coins2().solve(new int[] {88, 18, 35, 16, 58, 45, 1, 79, 11, 67, 84, 81, 70, 17, 26, 81, 31, 65, 89, 66, 79, 0, 45, 24, 71, 44, 66, 98, 78, 53, 2, 45, 47, 70, 67, 82, 7}));
    assertEquals(954, new Coins2().solve(new int[] {8, 59, 7, 4, 6, 25, 66, 76, 11, 65, 15, 86, 79, 86, 9, 33, 58, 3, 77, 84, 87, 95, 4, 45, 0, 9, 30, 58, 6, 57, 63, 64, 89, 86, 66, 10, 46, 9}));
    assertEquals(812, new Coins2().solve(new int[] {77, 11, 90, 54, 13, 6, 6, 61, 71, 6, 76, 13, 43, 56, 94, 25, 37, 76, 66, 85, 46, 38, 94, 3, 78, 57, 93, 27, 76, 21, 48, 90, 1, 3, 63, 98, 71, 5, 32}));
    assertEquals(1153, new Coins2().solve(new int[] {83, 31, 77, 87, 66, 70, 18, 91, 47, 33, 14, 9, 82, 31, 96, 11, 46, 96, 83, 80, 6, 45, 12, 82, 61, 47, 68, 57, 57, 89, 93, 72, 52, 13, 22, 67, 67, 42, 64, 16}));
    assertEquals(1048, new Coins2().solve(new int[] {96, 21, 56, 2, 7, 91, 67, 51, 90, 91, 9, 81, 78, 61, 49, 38, 54, 78, 59, 82, 6, 31, 79, 19, 45, 61, 54, 99, 75, 59, 96, 8, 22, 33, 5, 36, 21, 40, 42, 52, 56}));
    assertEquals(1213, new Coins2().solve(new int[] {26, 19, 45, 35, 92, 58, 3, 57, 35, 90, 39, 41, 44, 99, 99, 80, 73, 80, 72, 23, 81, 23, 79, 16, 0, 49, 68, 99, 3, 80, 89, 22, 54, 1, 56, 86, 50, 75, 97, 87, 25, 72}));
    assertEquals(991, new Coins2().solve(new int[] {11, 19, 70, 60, 5, 43, 38, 64, 17, 62, 52, 72, 29, 22, 38, 88, 58, 58, 84, 66, 58, 46, 46, 32, 29, 31, 22, 58, 97, 38, 40, 34, 71, 88, 48, 72, 2, 52, 98, 50, 71, 73, 7}));
    assertEquals(1280, new Coins2().solve(new int[] {93, 63, 96, 75, 30, 9, 22, 75, 99, 92, 14, 87, 35, 77, 5, 66, 65, 29, 39, 77, 50, 83, 27, 13, 85, 41, 24, 52, 15, 46, 67, 44, 92, 55, 1, 24, 36, 43, 45, 92, 21, 61, 40, 4}));
    assertEquals(984, new Coins2().solve(new int[] {2, 4, 36, 4, 61, 43, 27, 47, 63, 26, 9, 42, 32, 10, 76, 89, 98, 61, 29, 73, 90, 83, 71, 93, 81, 21, 10, 87, 30, 51, 26, 1, 30, 69, 14, 53, 34, 30, 24, 3, 89, 10, 61, 91, 69}));
    assertEquals(1119, new Coins2().solve(new int[] {5, 30, 64, 75, 89, 79, 12, 27, 42, 65, 89, 78, 6, 47, 59, 43, 40, 22, 39, 78, 81, 8, 54, 36, 61, 99, 16, 53, 0, 84, 80, 43, 51, 12, 1, 30, 14, 59, 63, 26, 32, 31, 56, 2, 24, 92}));
    assertEquals(1061, new Coins2().solve(new int[] {38, 72, 90, 58, 17, 86, 12, 61, 61, 90, 10, 77, 10, 33, 55, 33, 22, 67, 34, 97, 93, 96, 44, 88, 71, 13, 77, 69, 30, 77, 11, 70, 42, 17, 88, 20, 92, 58, 37, 86, 63, 14, 9, 68, 46, 80, 9}));
    assertEquals(1303, new Coins2().solve(new int[] {17, 86, 70, 4, 44, 16, 32, 46, 4, 68, 46, 69, 43, 96, 31, 57, 57, 89, 77, 59, 94, 3, 19, 53, 34, 96, 74, 44, 58, 4, 67, 66, 31, 83, 65, 3, 91, 60, 55, 36, 56, 2, 46, 96, 49, 70, 52, 92}));
    assertEquals(961, new Coins2().solve(new int[] {84, 61, 58, 29, 14, 46, 76, 59, 50, 36, 42, 57, 25, 90, 0, 52, 28, 12, 15, 13, 21, 8, 47, 92, 51, 1, 92, 83, 23, 7, 1, 20, 47, 83, 6, 43, 71, 50, 5, 80, 25, 43, 32, 58, 47, 22, 58, 65, 91}));
    assertEquals(1424, new Coins2().solve(new int[] {77, 98, 70, 49, 93, 82, 4, 89, 60, 58, 33, 81, 55, 93, 87, 28, 55, 2, 10, 13, 74, 47, 44, 69, 28, 54, 65, 51, 40, 49, 33, 89, 77, 20, 64, 41, 41, 39, 64, 63, 49, 74, 66, 19, 95, 33, 47, 4, 93, 61}));
    assertEquals(1353, new Coins2().solve(new int[] {77, 91, 47, 29, 51, 34, 85, 86, 97, 4, 7, 53, 94, 78, 22, 71, 88, 80, 51, 87, 2, 37, 99, 85, 18, 46, 38, 59, 76, 97, 21, 56, 96, 71, 8, 83, 60, 21, 16, 6, 86, 36, 19, 63, 46, 49, 2, 59, 79, 78, 68}));
    assertEquals(1408, new Coins2().solve(new int[] {53, 88, 38, 57, 59, 89, 8, 88, 53, 24, 31, 31, 52, 23, 80, 86, 5, 44, 58, 3, 66, 57, 58, 25, 66, 93, 10, 94, 6, 68, 82, 15, 17, 98, 91, 44, 16, 44, 14, 78, 3, 1, 81, 43, 79, 34, 46, 91, 60, 30, 84, 60}));
    assertEquals(1051, new Coins2().solve(new int[] {60, 64, 13, 36, 43, 68, 78, 22, 26, 6, 86, 49, 87, 86, 3, 1, 7, 65, 12, 59, 27, 79, 64, 68, 17, 14, 13, 42, 11, 11, 11, 24, 22, 57, 31, 8, 88, 75, 81, 50, 28, 67, 69, 69, 0, 74, 51, 90, 41, 2, 75, 80, 7}));
    assertEquals(1463, new Coins2().solve(new int[] {19, 80, 96, 44, 26, 45, 48, 62, 71, 68, 92, 45, 51, 51, 62, 51, 82, 38, 94, 52, 51, 47, 75, 43, 50, 3, 4, 86, 42, 73, 8, 90, 41, 15, 13, 70, 65, 50, 27, 74, 6, 87, 34, 69, 10, 5, 61, 51, 68, 9, 38, 6, 36, 12}));
    assertEquals(1173, new Coins2().solve(new int[] {64, 80, 32, 57, 15, 62, 57, 63, 76, 32, 1, 52, 61, 88, 9, 0, 51, 29, 95, 27, 10, 78, 98, 69, 6, 61, 86, 43, 38, 9, 36, 60, 7, 15, 38, 72, 39, 48, 35, 78, 59, 14, 94, 69, 14, 78, 29, 39, 87, 81, 15, 25, 10, 79, 11}));
    assertEquals(1689, new Coins2().solve(new int[] {23, 12, 72, 16, 72, 90, 91, 25, 91, 1, 33, 72, 82, 80, 34, 20, 52, 41, 71, 65, 18, 1, 20, 66, 99, 55, 10, 21, 36, 93, 89, 93, 90, 60, 16, 37, 95, 65, 66, 1, 57, 33, 17, 27, 91, 1, 54, 9, 70, 27, 63, 6, 92, 10, 85, 42}));
    assertEquals(1436, new Coins2().solve(new int[] {24, 64, 94, 2, 73, 11, 56, 41, 72, 93, 77, 98, 49, 13, 94, 51, 14, 95, 87, 31, 80, 80, 41, 48, 53, 92, 79, 92, 39, 5, 78, 23, 70, 5, 47, 10, 11, 19, 72, 66, 0, 59, 56, 94, 33, 92, 5, 3, 66, 76, 96, 36, 93, 59, 74, 27, 51}));
    assertEquals(1585, new Coins2().solve(new int[] {80, 77, 68, 58, 6, 39, 47, 81, 90, 81, 68, 43, 27, 40, 75, 70, 31, 80, 58, 64, 16, 57, 85, 94, 87, 55, 29, 5, 20, 55, 33, 42, 40, 3, 33, 25, 77, 68, 36, 5, 40, 58, 97, 12, 93, 82, 10, 71, 48, 57, 38, 86, 11, 59, 74, 4, 77, 88}));
    assertEquals(1201, new Coins2().solve(new int[] {99, 40, 85, 54, 2, 13, 40, 61, 96, 37, 53, 12, 13, 38, 23, 4, 25, 43, 98, 24, 7, 25, 46, 31, 50, 9, 10, 87, 97, 89, 89, 23, 78, 44, 91, 4, 82, 27, 54, 33, 57, 2, 60, 53, 70, 9, 73, 82, 3, 95, 59, 59, 16, 25, 14, 31, 77, 52, 53}));
    assertEquals(1637, new Coins2().solve(new int[] {5, 9, 69, 31, 53, 17, 50, 87, 21, 82, 62, 9, 37, 96, 43, 44, 69, 52, 44, 45, 84, 76, 9, 90, 18, 47, 35, 68, 20, 80, 69, 68, 68, 60, 1, 16, 21, 65, 0, 67, 96, 36, 8, 94, 8, 84, 1, 11, 53, 45, 48, 20, 95, 40, 37, 44, 11, 62, 7, 78}));
    assertEquals(1381, new Coins2().solve(new int[] {90, 50, 76, 51, 14, 49, 51, 43, 51, 9, 6, 68, 82, 22, 79, 47, 67, 30, 95, 71, 4, 87, 9, 48, 10, 14, 66, 89, 44, 55, 25, 3, 50, 36, 62, 50, 61, 29, 0, 65, 36, 34, 11, 53, 8, 23, 62, 48, 89, 1, 86, 37, 16, 57, 84, 8, 33, 95, 12, 36, 98}));
    assertEquals(1830, new Coins2().solve(new int[] {73, 73, 12, 19, 62, 99, 28, 86, 26, 5, 89, 18, 80, 56, 72, 15, 91, 25, 35, 74, 18, 93, 45, 39, 7, 11, 45, 72, 31, 72, 95, 33, 72, 84, 35, 61, 12, 90, 87, 40, 17, 96, 60, 96, 83, 45, 72, 94, 34, 23, 87, 94, 21, 25, 51, 46, 37, 80, 26, 76, 69, 90}));
    assertEquals(1596, new Coins2().solve(new int[] {21, 0, 32, 24, 96, 65, 5, 63, 73, 20, 43, 82, 92, 99, 54, 44, 80, 28, 25, 62, 65, 33, 85, 53, 79, 85, 19, 97, 24, 4, 34, 73, 49, 89, 78, 66, 61, 29, 97, 3, 32, 31, 39, 84, 64, 13, 33, 48, 18, 96, 82, 57, 83, 0, 27, 94, 29, 99, 5, 76, 14, 1, 78}));
    assertEquals(1837, new Coins2().solve(new int[] {41, 25, 26, 76, 19, 1, 87, 70, 86, 66, 15, 37, 32, 69, 57, 62, 87, 76, 27, 99, 96, 33, 34, 67, 8, 85, 9, 12, 15, 52, 41, 92, 60, 7, 60, 44, 57, 21, 27, 86, 83, 16, 8, 81, 92, 93, 3, 95, 25, 80, 21, 83, 7, 85, 96, 61, 26, 43, 76, 3, 12, 31, 90, 69}));
    assertEquals(1291, new Coins2().solve(new int[] {59, 76, 50, 25, 46, 43, 71, 42, 91, 70, 72, 28, 54, 24, 31, 53, 27, 20, 9, 22, 70, 54, 37, 96, 16, 30, 37, 38, 1, 42, 31, 13, 45, 73, 82, 23, 44, 7, 85, 37, 73, 28, 57, 4, 0, 57, 42, 11, 49, 21, 37, 40, 45, 17, 9, 24, 75, 96, 55, 17, 80, 74, 53, 47, 39}));
    assertEquals(1863, new Coins2().solve(new int[] {76, 2, 2, 5, 88, 4, 88, 62, 94, 24, 59, 29, 72, 71, 66, 46, 79, 47, 69, 28, 80, 56, 35, 43, 3, 29, 56, 75, 78, 18, 72, 8, 14, 19, 19, 11, 14, 80, 7, 41, 92, 61, 95, 68, 54, 58, 54, 70, 70, 68, 58, 39, 71, 86, 67, 7, 24, 10, 91, 24, 18, 20, 19, 78, 79, 25}));
    assertEquals(1627, new Coins2().solve(new int[] {88, 52, 5, 58, 77, 39, 46, 56, 74, 95, 6, 20, 46, 78, 42, 59, 49, 34, 89, 96, 28, 35, 3, 55, 83, 10, 19, 39, 18, 33, 14, 35, 51, 38, 35, 73, 43, 88, 76, 72, 48, 29, 25, 76, 87, 10, 35, 66, 44, 37, 30, 45, 96, 84, 65, 56, 27, 13, 13, 33, 90, 18, 49, 95, 67, 59, 73}));
    assertEquals(1647, new Coins2().solve(new int[] {1, 1, 50, 25, 10, 87, 50, 94, 70, 57, 53, 64, 27, 30, 12, 74, 14, 65, 86, 36, 60, 22, 52, 42, 72, 14, 88, 63, 11, 12, 69, 21, 71, 38, 72, 43, 30, 76, 33, 77, 19, 39, 32, 55, 87, 55, 3, 47, 37, 87, 24, 24, 49, 14, 65, 0, 63, 80, 36, 59, 96, 58, 82, 6, 50, 51, 40, 52}));
    assertEquals(1492, new Coins2().solve(new int[] {84, 24, 8, 31, 25, 66, 94, 10, 78, 15, 98, 22, 32, 8, 83, 59, 65, 27, 11, 23, 10, 89, 34, 90, 86, 93, 33, 17, 94, 40, 10, 77, 20, 93, 78, 19, 90, 46, 12, 7, 80, 19, 30, 33, 7, 89, 22, 76, 13, 11, 6, 26, 30, 60, 13, 17, 20, 82, 94, 17, 47, 80, 15, 38, 13, 69, 23, 49, 34}));
    assertEquals(1801, new Coins2().solve(new int[] {82, 21, 24, 28, 45, 93, 11, 8, 81, 90, 71, 32, 55, 6, 1, 86, 83, 29, 66, 55, 20, 80, 38, 10, 88, 19, 75, 88, 75, 19, 54, 51, 91, 2, 22, 87, 7, 96, 65, 41, 86, 18, 7, 60, 4, 7, 40, 90, 27, 75, 2, 71, 74, 33, 41, 2, 51, 9, 88, 41, 88, 74, 50, 63, 25, 78, 89, 53, 60, 88}));
    assertEquals(1714, new Coins2().solve(new int[] {14, 89, 17, 31, 78, 23, 73, 33, 85, 67, 31, 67, 25, 32, 58, 0, 78, 23, 3, 86, 41, 99, 30, 80, 39, 13, 23, 46, 17, 14, 28, 55, 99, 56, 90, 57, 30, 86, 50, 15, 37, 36, 69, 16, 59, 82, 15, 57, 7, 93, 65, 93, 90, 16, 95, 5, 40, 70, 66, 69, 94, 49, 15, 6, 90, 55, 24, 91, 44, 21, 67}));
    assertEquals(1967, new Coins2().solve(new int[] {88, 6, 61, 90, 99, 36, 28, 70, 64, 18, 81, 40, 42, 39, 74, 85, 85, 10, 1, 86, 44, 36, 56, 81, 22, 46, 17, 76, 77, 16, 24, 72, 85, 75, 6, 25, 51, 56, 96, 33, 13, 95, 26, 98, 71, 99, 62, 54, 48, 87, 6, 46, 55, 90, 69, 19, 93, 44, 94, 13, 28, 2, 58, 25, 3, 81, 32, 35, 5, 94, 31, 42}));
    assertEquals(1860, new Coins2().solve(new int[] {68, 57, 5, 52, 9, 80, 4, 17, 46, 3, 69, 39, 85, 62, 88, 76, 29, 75, 99, 45, 47, 26, 8, 75, 14, 35, 66, 64, 56, 4, 8, 47, 29, 32, 60, 46, 67, 96, 79, 70, 79, 80, 42, 81, 62, 55, 71, 31, 36, 4, 18, 82, 92, 72, 86, 85, 50, 94, 84, 27, 81, 32, 14, 26, 12, 97, 53, 31, 42, 49, 37, 89, 71}));
    assertEquals(1951, new Coins2().solve(new int[] {17, 94, 27, 75, 76, 69, 46, 44, 1, 77, 96, 80, 68, 64, 67, 63, 28, 26, 21, 15, 4, 80, 50, 93, 67, 95, 84, 89, 61, 88, 7, 18, 11, 64, 50, 60, 66, 29, 72, 83, 93, 20, 20, 69, 42, 57, 81, 45, 92, 49, 18, 43, 74, 83, 35, 8, 91, 83, 32, 6, 5, 57, 38, 16, 60, 9, 25, 64, 2, 0, 14, 3, 13, 33}));
    assertEquals(2041, new Coins2().solve(new int[] {50, 83, 61, 83, 91, 56, 28, 68, 9, 16, 79, 95, 30, 29, 0, 28, 40, 97, 85, 24, 64, 62, 60, 20, 85, 36, 82, 97, 94, 74, 92, 62, 22, 29, 63, 24, 69, 89, 88, 96, 3, 43, 67, 72, 5, 92, 58, 46, 44, 91, 45, 84, 88, 42, 74, 69, 74, 83, 35, 62, 22, 46, 47, 46, 51, 60, 6, 45, 80, 78, 40, 27, 24, 36, 86}));
    assertEquals(1828, new Coins2().solve(new int[] {49, 18, 5, 78, 61, 40, 35, 85, 38, 66, 1, 2, 36, 80, 6, 5, 1, 64, 2, 45, 54, 57, 35, 11, 49, 2, 36, 29, 47, 3, 86, 28, 63, 76, 0, 67, 58, 43, 10, 21, 50, 66, 68, 69, 65, 62, 56, 60, 3, 10, 26, 78, 33, 26, 87, 79, 70, 69, 64, 23, 91, 25, 13, 97, 90, 95, 70, 6, 23, 85, 40, 40, 80, 69, 97, 18}));
    assertEquals(1778, new Coins2().solve(new int[] {97, 57, 66, 79, 84, 63, 57, 23, 71, 72, 63, 52, 86, 20, 8, 76, 4, 78, 74, 89, 98, 27, 5, 10, 87, 32, 0, 84, 8, 89, 5, 69, 71, 28, 7, 12, 84, 44, 21, 79, 68, 96, 36, 35, 6, 59, 46, 78, 68, 33, 41, 23, 75, 8, 50, 7, 67, 86, 27, 15, 13, 64, 1, 27, 80, 44, 16, 30, 62, 95, 21, 23, 4, 25, 53, 76, 54}));
    assertEquals(2019, new Coins2().solve(new int[] {15, 0, 1, 97, 99, 61, 13, 76, 19, 22, 62, 97, 76, 88, 75, 36, 9, 51, 67, 22, 65, 48, 16, 56, 98, 77, 30, 44, 12, 19, 11, 21, 66, 39, 44, 47, 16, 79, 65, 86, 6, 51, 10, 64, 65, 31, 42, 73, 12, 65, 66, 11, 79, 0, 84, 96, 63, 81, 56, 11, 13, 45, 47, 41, 34, 60, 35, 88, 87, 58, 29, 97, 23, 22, 44, 44, 6, 10}));
    assertEquals(2001, new Coins2().solve(new int[] {37, 80, 73, 41, 51, 87, 9, 64, 68, 75, 16, 81, 98, 22, 7, 44, 70, 4, 9, 6, 67, 54, 25, 22, 75, 17, 81, 92, 47, 18, 7, 38, 12, 20, 84, 97, 7, 76, 95, 47, 89, 76, 44, 45, 7, 28, 35, 92, 3, 63, 69, 68, 91, 36, 46, 61, 64, 33, 80, 59, 95, 56, 91, 14, 43, 19, 34, 12, 36, 76, 11, 69, 51, 52, 79, 84, 84, 9, 93}));
    assertEquals(2138, new Coins2().solve(new int[] {32, 21, 77, 29, 12, 56, 75, 53, 80, 20, 58, 76, 17, 53, 89, 43, 15, 22, 59, 62, 81, 53, 2, 63, 35, 6, 24, 97, 40, 16, 49, 96, 92, 29, 40, 5, 48, 45, 78, 83, 42, 55, 36, 98, 52, 68, 14, 15, 0, 29, 93, 99, 74, 7, 86, 44, 77, 2, 57, 23, 57, 19, 88, 81, 54, 88, 94, 54, 78, 98, 45, 87, 29, 77, 63, 52, 14, 89, 33, 30}));
    assertEquals(1928, new Coins2().solve(new int[] {90, 8, 24, 91, 61, 37, 41, 53, 66, 55, 42, 20, 53, 50, 23, 44, 71, 48, 32, 54, 73, 20, 72, 27, 53, 2, 95, 52, 49, 67, 93, 61, 0, 38, 38, 61, 68, 28, 94, 19, 18, 93, 74, 43, 21, 37, 25, 24, 9, 6, 54, 47, 44, 79, 99, 57, 55, 22, 55, 69, 3, 74, 58, 0, 60, 53, 69, 78, 46, 38, 25, 42, 95, 79, 92, 58, 45, 14, 55, 90, 76}));
    assertEquals(2176, new Coins2().solve(new int[] {98, 79, 96, 89, 5, 55, 61, 26, 56, 68, 39, 31, 71, 12, 30, 34, 39, 90, 68, 7, 70, 58, 49, 46, 67, 85, 84, 45, 47, 63, 54, 51, 12, 29, 93, 63, 12, 79, 48, 87, 94, 66, 34, 72, 29, 72, 16, 75, 98, 81, 65, 3, 57, 86, 57, 30, 19, 29, 66, 13, 0, 67, 87, 95, 8, 22, 90, 6, 16, 4, 22, 18, 62, 61, 62, 92, 9, 21, 94, 23, 92, 5}));
    assertEquals(1716, new Coins2().solve(new int[] {31, 41, 82, 92, 46, 32, 61, 11, 70, 49, 32, 63, 34, 87, 81, 23, 19, 78, 8, 8, 35, 74, 9, 80, 8, 46, 86, 76, 59, 93, 38, 95, 36, 47, 14, 73, 51, 95, 51, 41, 74, 54, 15, 81, 59, 80, 57, 20, 33, 47, 72, 25, 54, 31, 0, 33, 14, 82, 93, 67, 28, 21, 92, 20, 19, 88, 0, 7, 61, 84, 2, 17, 16, 18, 50, 71, 89, 17, 19, 96, 10, 44, 8}));
    assertEquals(2076, new Coins2().solve(new int[] {31, 11, 26, 9, 86, 62, 39, 1, 40, 89, 28, 38, 77, 29, 16, 80, 96, 80, 6, 86, 16, 74, 74, 68, 12, 9, 83, 62, 84, 52, 63, 94, 84, 80, 27, 9, 8, 27, 95, 70, 90, 13, 46, 12, 5, 52, 79, 95, 39, 3, 27, 11, 70, 35, 35, 41, 28, 83, 29, 87, 64, 2, 87, 39, 54, 7, 29, 88, 42, 81, 21, 93, 6, 25, 26, 18, 27, 65, 65, 20, 29, 51, 91, 33}));
    assertEquals(1924, new Coins2().solve(new int[] {10, 75, 91, 10, 16, 86, 48, 71, 36, 24, 52, 57, 28, 45, 77, 62, 94, 88, 57, 93, 91, 24, 97, 12, 10, 53, 2, 0, 76, 15, 87, 80, 69, 83, 19, 23, 27, 63, 48, 72, 0, 79, 38, 71, 22, 89, 10, 70, 22, 89, 67, 34, 5, 68, 54, 89, 71, 91, 86, 46, 22, 73, 54, 72, 32, 93, 72, 54, 61, 1, 88, 19, 3, 65, 2, 14, 33, 0, 5, 62, 27, 62, 79, 81, 36}));
    assertEquals(2092, new Coins2().solve(new int[] {6, 50, 67, 26, 23, 77, 90, 19, 55, 57, 36, 44, 71, 88, 69, 27, 18, 60, 80, 46, 80, 30, 37, 24, 98, 13, 25, 37, 9, 61, 61, 29, 13, 32, 12, 46, 73, 19, 21, 37, 77, 32, 90, 36, 0, 45, 36, 51, 23, 93, 55, 5, 10, 39, 17, 51, 22, 59, 38, 19, 81, 5, 75, 51, 99, 57, 2, 64, 73, 25, 86, 14, 92, 58, 56, 46, 8, 17, 18, 51, 95, 39, 27, 56, 25, 49}));
    assertEquals(1941, new Coins2().solve(new int[] {36, 43, 81, 54, 42, 10, 94, 27, 86, 66, 49, 8, 59, 25, 68, 93, 54, 69, 44, 56, 40, 92, 79, 30, 63, 23, 28, 81, 62, 31, 76, 40, 13, 46, 23, 23, 62, 19, 92, 71, 75, 2, 39, 10, 40, 47, 24, 20, 96, 3, 33, 61, 52, 72, 25, 23, 88, 25, 39, 88, 71, 69, 55, 4, 10, 98, 8, 77, 44, 87, 91, 45, 37, 8, 88, 18, 5, 62, 95, 18, 20, 18, 6, 53, 89, 90, 2}));
    assertEquals(2217, new Coins2().solve(new int[] {63, 48, 43, 59, 83, 21, 43, 75, 10, 55, 51, 95, 77, 77, 85, 72, 5, 56, 19, 92, 21, 58, 0, 8, 27, 59, 28, 84, 90, 59, 32, 39, 4, 4, 40, 29, 3, 70, 81, 78, 64, 20, 11, 16, 67, 37, 11, 98, 67, 1, 59, 93, 23, 3, 55, 27, 56, 80, 89, 90, 81, 58, 40, 59, 57, 27, 33, 13, 71, 96, 30, 46, 59, 14, 24, 53, 18, 92, 75, 0, 68, 3, 49, 49, 15, 20, 28, 40}));
    assertEquals(2024, new Coins2().solve(new int[] {87, 56, 7, 41, 17, 50, 55, 66, 1, 45, 73, 43, 28, 84, 0, 26, 92, 65, 25, 8, 34, 30, 31, 16, 54, 75, 8, 85, 5, 56, 7, 48, 73, 82, 28, 97, 95, 47, 61, 60, 6, 83, 36, 14, 65, 22, 41, 50, 73, 11, 3, 37, 56, 31, 99, 54, 78, 36, 48, 28, 74, 1, 35, 57, 75, 23, 59, 90, 38, 92, 30, 45, 3, 92, 70, 19, 51, 66, 30, 86, 11, 27, 93, 74, 60, 26, 93, 16, 16}));
    assertEquals(2460, new Coins2().solve(new int[] {90, 26, 99, 30, 17, 14, 57, 43, 49, 56, 31, 19, 91, 89, 89, 8, 25, 15, 77, 85, 84, 63, 70, 3, 58, 71, 96, 65, 97, 75, 47, 29, 18, 72, 30, 56, 46, 10, 7, 55, 51, 8, 69, 89, 90, 72, 37, 88, 45, 4, 97, 84, 40, 63, 78, 67, 98, 25, 10, 8, 62, 18, 76, 23, 95, 4, 56, 57, 34, 60, 3, 33, 6, 26, 31, 34, 23, 1, 31, 53, 88, 8, 11, 39, 6, 16, 79, 57, 66, 80}));
    assertEquals(2014, new Coins2().solve(new int[] {62, 36, 2, 54, 2, 40, 66, 34, 95, 28, 74, 84, 9, 75, 61, 38, 42, 50, 24, 4, 73, 62, 55, 68, 10, 23, 57, 84, 64, 11, 27, 54, 73, 38, 74, 75, 17, 78, 98, 28, 52, 38, 30, 25, 17, 67, 1, 33, 42, 14, 90, 51, 6, 23, 49, 43, 7, 96, 59, 76, 77, 79, 64, 62, 51, 13, 60, 65, 69, 34, 27, 20, 58, 94, 58, 36, 24, 43, 28, 62, 34, 90, 1, 44, 74, 60, 11, 65, 34, 21, 6}));
    assertEquals(2333, new Coins2().solve(new int[] {35, 2, 44, 2, 5, 63, 34, 65, 87, 18, 93, 70, 97, 47, 1, 18, 5, 77, 98, 45, 41, 75, 53, 9, 60, 14, 1, 88, 10, 18, 94, 40, 35, 71, 53, 24, 9, 14, 28, 85, 6, 20, 89, 18, 23, 39, 58, 98, 84, 39, 39, 93, 6, 89, 39, 82, 59, 72, 14, 48, 74, 20, 8, 51, 94, 16, 72, 79, 37, 60, 12, 40, 18, 28, 92, 72, 11, 88, 14, 6, 37, 0, 88, 63, 74, 88, 73, 44, 37, 94, 43, 84}));
    assertEquals(2056, new Coins2().solve(new int[] {10, 8, 95, 48, 45, 42, 16, 5, 65, 24, 1, 10, 58, 45, 29, 27, 92, 76, 36, 33, 55, 63, 24, 8, 8, 67, 15, 11, 86, 7, 92, 11, 17, 69, 46, 95, 24, 96, 76, 89, 82, 27, 16, 2, 12, 2, 59, 80, 78, 71, 5, 89, 56, 97, 14, 71, 24, 82, 24, 86, 81, 2, 18, 54, 56, 24, 70, 32, 63, 5, 74, 68, 34, 92, 8, 14, 66, 9, 84, 17, 82, 87, 29, 48, 49, 80, 24, 12, 22, 83, 13, 3, 95}));
    assertEquals(2628, new Coins2().solve(new int[] {30, 23, 32, 53, 77, 74, 19, 65, 79, 45, 92, 68, 28, 42, 16, 9, 46, 75, 81, 19, 90, 50, 84, 93, 86, 69, 24, 51, 56, 13, 21, 88, 88, 0, 70, 86, 15, 71, 92, 11, 94, 57, 29, 97, 79, 98, 10, 16, 43, 79, 65, 73, 80, 67, 43, 51, 73, 65, 66, 42, 33, 65, 59, 95, 65, 69, 22, 11, 95, 80, 55, 13, 76, 66, 62, 35, 5, 19, 26, 45, 65, 78, 87, 96, 63, 14, 30, 2, 11, 36, 98, 27, 68, 32}));
    assertEquals(2665, new Coins2().solve(new int[] {62, 30, 46, 86, 75, 50, 77, 46, 7, 51, 98, 52, 99, 89, 89, 37, 5, 94, 65, 15, 43, 61, 84, 64, 21, 51, 63, 38, 93, 83, 55, 99, 26, 79, 45, 84, 34, 13, 48, 88, 98, 44, 85, 30, 57, 75, 64, 1, 35, 52, 94, 82, 92, 55, 66, 56, 20, 86, 2, 23, 47, 61, 82, 21, 63, 23, 76, 21, 74, 91, 45, 87, 14, 69, 24, 70, 23, 93, 9, 63, 57, 43, 40, 74, 66, 86, 47, 74, 87, 91, 42, 43, 47, 77, 78}));
    assertEquals(2782, new Coins2().solve(new int[] {75, 85, 90, 94, 90, 12, 88, 64, 90, 65, 54, 83, 59, 37, 76, 81, 82, 64, 91, 71, 65, 14, 66, 88, 11, 66, 45, 96, 10, 9, 59, 91, 5, 68, 43, 8, 20, 26, 53, 16, 14, 9, 23, 54, 33, 88, 47, 72, 91, 55, 83, 91, 78, 63, 4, 29, 79, 9, 5, 93, 92, 69, 36, 57, 69, 40, 47, 84, 81, 31, 65, 22, 59, 23, 68, 73, 72, 55, 95, 69, 57, 53, 12, 80, 1, 82, 47, 81, 17, 47, 87, 84, 61, 44, 39, 43}));
    assertEquals(2296, new Coins2().solve(new int[] {90, 41, 66, 71, 35, 12, 96, 65, 56, 43, 8, 36, 93, 91, 14, 73, 89, 70, 66, 23, 26, 97, 52, 73, 22, 94, 51, 1, 29, 38, 60, 54, 38, 74, 92, 2, 12, 40, 59, 10, 9, 81, 0, 92, 98, 7, 66, 4, 58, 77, 65, 19, 93, 3, 33, 96, 57, 64, 93, 56, 40, 66, 52, 94, 82, 5, 61, 16, 2, 48, 32, 97, 3, 1, 20, 72, 44, 12, 50, 14, 25, 40, 1, 8, 18, 54, 72, 44, 11, 62, 68, 93, 50, 48, 38, 38, 73}));
    assertEquals(2331, new Coins2().solve(new int[] {20, 36, 29, 31, 11, 41, 46, 42, 87, 92, 44, 63, 37, 47, 58, 97, 97, 97, 54, 9, 18, 64, 46, 31, 53, 45, 25, 3, 48, 78, 39, 43, 37, 47, 53, 69, 21, 2, 84, 17, 83, 0, 68, 83, 18, 16, 32, 63, 97, 86, 45, 22, 39, 18, 53, 34, 15, 24, 82, 3, 83, 28, 52, 37, 46, 27, 76, 50, 51, 5, 0, 68, 88, 95, 20, 24, 20, 69, 10, 26, 93, 20, 9, 1, 94, 41, 35, 12, 21, 37, 42, 39, 37, 73, 19, 47, 36, 19}));
    assertEquals(2311, new Coins2().solve(new int[] {35, 88, 48, 92, 89, 57, 48, 30, 8, 83, 62, 14, 30, 71, 47, 22, 59, 26, 7, 49, 77, 36, 27, 19, 20, 85, 33, 28, 29, 4, 87, 30, 96, 94, 93, 6, 52, 81, 69, 85, 65, 94, 88, 92, 16, 6, 72, 98, 13, 70, 68, 30, 38, 38, 33, 64, 44, 26, 31, 85, 65, 9, 43, 31, 37, 51, 73, 40, 33, 63, 24, 88, 33, 78, 47, 14, 26, 6, 0, 58, 37, 75, 12, 9, 63, 59, 26, 94, 78, 7, 68, 33, 37, 13, 12, 7, 37, 93, 76}));
  }
}