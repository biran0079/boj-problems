package boj.solution;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.Timeout;


import static org.junit.Assert.*;

/**
 * Created by biran on 10/30/16.
 */
public class HousePaintingAgainTest {

  @Rule
  public final Timeout globalTimeout = Timeout.seconds(1);
  private final HousePaintingAgain solver = new HousePaintingAgain();

  @Test
  public void test1() {
    test(new int[][] {
        {1,2,2},
        {2,1,2},
        {2,2,1},
        {2,1,2},
        {1,2,2},
    }, new int[] {0,1,2,1,0});
    test(new int[][] {
        {1,2,2},
        {1,3,3},
        {2,1,2},
        {2,2,1},
        {2,1,2},
    }, new int[] {1,0,1,2,1});
  }

  @Test
  public void test2() {
    test(new int[][] {{60, 48}, {29, 47}, {15, 53}}, new int[] {0, 1, 0});
    test(new int[][] {{91, 61, 19}, {54, 77, 77}, {73, 62, 95}}, new int[] {2, 0, 1});
    test(new int[][] {{44, 84, 75, 41}, {20, 43, 88, 24}, {47, 52, 60, 3}}, new int[] {3, 0, 3});
    test(new int[][] {{82, 92}, {23, 45}, {45, 37}, {87, 2}}, new int[] {0, 1, 0, 1});
    test(new int[][] {{62, 25, 53}, {38, 35, 60}, {75, 55, 30}, {98, 91, 74}}, new int[] {1, 0, 2, 1});
    test(new int[][] {{36, 12, 62, 19}, {77, 16, 46, 7}, {16, 8, 37, 43}, {47, 87, 88, 5}}, new int[] {1, 3, 1, 3});
    test(new int[][] {{58, 8}, {17, 51}, {18, 58}, {18, 38}, {72, 57}}, new int[] {1, 0, 1, 0, 1});
    test(new int[][] {{51, 26, 80}, {97, 62, 35}, {20, 67, 73}, {17, 69, 5}, {52, 89, 43}}, new int[] {1, 2, 0, 2, 0});
    test(new int[][] {{1, 41, 23, 80}, {68, 14, 16, 23}, {57, 22, 5, 71}, {36, 65, 19, 53}, {67, 67, 31, 97}}, new int[] {0, 1, 2, 0, 2});
    test(new int[][] {{88, 63}, {30, 25}, {98, 21}, {97, 57}, {86, 41}, {90, 51}}, new int[] {1, 0, 1, 0, 1, 0});
    test(new int[][] {{71, 34, 30}, {65, 86, 4}, {84, 62, 92}, {50, 28, 53}, {49, 45, 41}, {10, 25, 62}}, new int[] {1, 2, 0, 1, 2, 0});
    test(new int[][] {{94, 59, 17, 11}, {71, 23, 77, 78}, {16, 71, 35, 41}, {86, 93, 13, 57}, {58, 78, 16, 58}, {40, 75, 55, 45}}, new int[] {3, 1, 0, 2, 3, 0});
    test(new int[][] {{8, 29}, {15, 75}, {33, 90}, {41, 6}, {98, 32}, {78, 41}, {67, 29}}, new int[] {1, 0, 1, 0, 1, 0, 1});
    test(new int[][] {{39, 91, 2}, {81, 77, 81}, {78, 1, 84}, {63, 89, 12}, {60, 73, 72}, {15, 13, 91}, {53, 2, 80}}, new int[] {2, 0, 1, 2, 1, 0, 1});
    test(new int[][] {{34, 34, 78, 15}, {82, 69, 48, 38}, {90, 60, 16, 73}, {62, 54, 94, 62}, {28, 89, 22, 59}, {74, 75, 90, 93}, {60, 17, 50, 32}}, new int[] {1, 3, 2, 1, 2, 0, 1});
    test(new int[][] {{72, 70}, {43, 14}, {2, 0}, {26, 52}, {45, 5}, {13, 93}, {48, 77}, {20, 46}}, new int[] {1, 0, 1, 0, 1, 0, 1, 0});
    test(new int[][] {{2, 85, 26}, {19, 43, 72}, {57, 50, 35}, {94, 16, 94}, {48, 69, 88}, {28, 35, 96}, {26, 47, 24}, {24, 89, 43}}, new int[] {2, 0, 2, 1, 0, 1, 2, 0});
    test(new int[][] {{53, 23, 92, 86}, {74, 55, 44, 95}, {46, 71, 57, 84}, {37, 77, 34, 79}, {82, 0, 58, 5}, {52, 11, 80, 86}, {38, 19, 51, 26}, {92, 85, 64, 17}}, new int[] {1, 2, 0, 2, 3, 1, 0, 3});
    test(new int[][] {{16, 23}, {62, 15}, {62, 8}, {41, 51}, {36, 12}, {3, 53}, {18, 70}, {88, 99}, {18, 11}}, new int[] {1, 0, 1, 0, 1, 0, 1, 0, 1});
    test(new int[][] {{60, 29, 57}, {36, 15, 17}, {75, 95, 36}, {86, 24, 71}, {35, 10, 51}, {40, 74, 27}, {20, 63, 27}, {67, 26, 52}, {84, 18, 79}}, new int[] {1, 0, 2, 1, 0, 2, 0, 2, 1});
    test(new int[][] {{23, 68, 21, 41}, {80, 86, 54, 93}, {22, 56, 98, 67}, {7, 34, 49, 62}, {62, 77, 93, 38}, {12, 59, 70, 76}, {80, 93, 54, 69}, {98, 97, 32, 76}, {98, 49, 6, 26}}, new int[] {0, 2, 0, 1, 3, 0, 3, 2, 3});
  }

  private void test(int[][] cost, int[] exp) {
    int expCost = 0;
    int actualCost = 0;
    for (int i = 0; i < exp.length; i++) {
      expCost += cost[i][exp[i]];
    }
    int[] actual = solver.solve(cost.length, cost[0].length, cost);
    for (int i = 0; i < actual.length; i++) {
      actualCost += cost[i][actual[i]];
    }
    assertEquals(expCost, actualCost);
  }
}